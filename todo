ADD:
	Allow a technician to be in more than one section
	Display what technician is assigned to a ticket
	*BUG*Fix whatever bels broke in ReadConfig while adding the ability to add technicians to tickets.  Check apache log for errors
	Gather more information about the technicians when creating accounts so more than a login can be showed to the customer
	Add historical work log
	Add ticket lookup by number
	Add queues and allow technicians to see other tickets in their queue
	Make the ticket lookup show the technician who is logged in that is logged in
	Need to add duplicate checking when adding sites or customers.
	Go back through and update tooltips with a value of 0 to an actual tip
	Possibly merge the config writing routines of add_sites.pl to ReadConfig and change ReadConfig to Config and have it perform both reading and writing functions.
	*BUG* tips don't work if they are not separated by a tab character.  Something like this shouldn't break the tips in case someone wants to add some down the road.
	Add validation to most if not all of the forms.
	It would be nice if the notification library was able to send the customer portal as a link so a customer could check on their tickets.
	Add customer satisfaction survey
	It would also be nice if the notification library sent the customer satisfaction survey when a ticket was closed
	Move the configuration files to a config directory and update all files that make use of configs.
	Make customer logout redirect to customer page instead of admin page.
	A notification library that can be used to send out different forms of notifications (email, sms, mms, etc...)
	Add a navigation menu of some sort to allow customers to do things like view open tickets and logout.
	Add a mechanism for adding sites into the database.  This isn't something I can statically add to the sql creation file
	Add a title(synopsis) field in the database that could act as a title used in areas that do not have the space to display the whole problem.
	Create an install script that performs all installation tasks (ie. creates the database, creates cron jobs for maintenance scripts, checks for known dependencies, etc..)
	The UI references the config file for sites but the perl modules reference the database.  this needs to be fixed.
	Add the ability to enter what time you are free when entering a ticket
	Add a SQL filter that takes things like ' and turns them into safe characters
	Even though the website is referencing priority from the config file the database and inserting perl modules uses the database itself.  This needs to be moved over.
	I started changing the names of things to be less school based and become more generic.  Needs lots of testing now.
	Need to make sure all the tooltips on the Ticket input are still accurate
	I moved some stuff out of the database into the configuration file and that is going to require some cleanup at some point
	Change the barcode or serial part to something more generic like workstation id (or possibly something that is controlled by the config)
	Improve the UserFunctions perl module
	Improve the Session perl module
	Make the site themeable
	Make sure everything is using the config files for information like database type, username, company name, etc
	-----------------------------------------------
	Field for State Room Classification
	Field for E-911 Primary Phone (how? for every barcode? ick.)
	maybe add a new table to hold locations... ick
	(Probably this must wait on the new tag-based system. Room classification 
	is just another property. Each item can have a property pointer to the 
	room classification property in which it resides.)	
	Clean up code to make it more MVC-like. In progress.

*DONE* Add a way to specify which queues/sections a technician is in.
*DONE* Add a way to add sections/queues
*DONE* Add ability to assign a technician to tickets.
*DONE* Make it so the site in the ticket details is the site name and not the number.  It is currently the number because the database stores the site_id as a foriegn key and not the name.
*DONE* It would be nice if the notification library would account for the ticket number when contacting the customer
*DONE* Move the menu into it's own Template Toolkit file
*DONE* Rename CCBOEHD to LIBS or something like that since it actually contains perl modules (the new site uses libs)
*DONE* Add ability to click on a ticket in the ticket lookup and retrieve it's details
---------------------------------------------------
*DONE*Type should be associated with Model not Inventory
Cost should be associated with Purchase not Type

*DONE*Something must be done about Software!
*DONE*os:
*DONE* .osid		1
*DONE* .vendor	Microsoft
*DONE* .line		Widnows
*DONE* .version	XP SP2
*DONE* .desc		Microsoft Windows XP SP2

*DONE*office:
*DONE* .offid		1
*DONE* .vendor	Microsoft
*DONE* .line		Office
*DONE* .version	2000
*DONE* .desc		Microsoft Office 2000
*DONE*Something like that. Plus a inventory.software text field for other software notes.

*DONE*Select OS and Office from the list when doing a Model and they're 
*DONE*copied accross just like RAM, HD, etc.. Model should also have a 
*DONE*software field just like inventory (described above) which is also 
*DONE*copied accross.

Add generic update query form. Behavior:
	Select form much as seen in the current Report.
	Sort form similarly.
	In addition to the Report button there is at the buttom of the page an Update button.
	Just above the Update button is another Select form like the first. In this Select 
	form selected fields will be SET to selected values when Update is clicked.
	Requires:
		A new Report.pm mode: update or set.
		A function to take the form submit from the Update button and turn it into a
		(or a series of) 'update table set ... where ...;' statements.
		How to handle cross-table stuff? How to handle 'field shows text, field is ID'?



#To the Inventory table add a Deployed Date field. This can be used in 
#conjunction with the Last Updated date and allows for less information 
#loss when transitioning old record from the old db. *ADDED*! Not hooked 
#to anything yet. *HOOKED UP* Works in at least Update if not Insert.
#SEEMS TO WORK!

Per MikeH:
#	Add a new mode for Form.pm called (say) view. View mode is identical to edit mode except
#	that the template has no submit button and the fields are not editable. An additional 
#	"Notes to user" field may be nice along the top of the View. This would be a place where
#	the CA can talk to their users.
	THIS IS PARTIALLY DONE. View mode exists and has been hooked in somewhat.


Add forms for:
	Adding/editing schools.
	Adding/editing operating systems.
	Adding/editing office suites.
	Adding/editing sections.
	Adding/editing statues?


Major revisions, including:
	Remove the app= CGI param
	Instead, create seperate .pm files (e.g. Inventory.pm, InventoryReport.pm) deriving from the base class.
	Also create seperate .pl files instantiating those .pm's (e.g. inventory.pl)
	Doing this will allow the removal of hard-coding from Form.pm and Report.pm.
	It will also mean massive cleanups as functions are moved into just the modules they *need* to be in


Setup a teardown() function to disconnect from the DB properly

Catch errors with an error mode + template

Classify each and every function according to whether it is a Model, View, Controller or other function. For functions which are at least two of Model, View and Controller find a way to split them appopriately (or a logical place to put them).
